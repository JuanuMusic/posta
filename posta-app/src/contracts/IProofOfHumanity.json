{
  "contractName": "IProofOfHumanity",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_submissionID",
          "type": "address"
        }
      ],
      "name": "isRegistered",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "submissionCounter",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_submissionID",
          "type": "address"
        }
      ],
      "name": "getSubmissionInfo",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint8",
              "name": "status",
              "type": "uint8"
            },
            {
              "internalType": "uint64",
              "name": "submissionTime",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "index",
              "type": "uint64"
            },
            {
              "internalType": "bool",
              "name": "registered",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "hasVouched",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "numberOfRequests",
              "type": "uint256"
            }
          ],
          "internalType": "struct IProofOfHumanity.SubmissionInfo",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_submissionID\",\"type\":\"address\"}],\"name\":\"getSubmissionInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"uint8\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"uint64\",\"name\":\"submissionTime\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"index\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"registered\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"hasVouched\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"numberOfRequests\",\"type\":\"uint256\"}],\"internalType\":\"struct IProofOfHumanity.SubmissionInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_submissionID\",\"type\":\"address\"}],\"name\":\"isRegistered\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"submissionCounter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"isRegistered(address)\":{\"details\":\"Return true if the submission is registered and not expired.\",\"params\":{\"_submissionID\":\"The address of the submission.\"},\"returns\":{\"_0\":\"Whether the submission is registered or not.\"}},\"submissionCounter()\":{\"details\":\"Return the number of submissions irrespective of their status.\",\"returns\":{\"_0\":\"The number of submissions.\"}},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/E/Code/Repos/JuanuMusic/posta/posta-contracts/contracts/IProofOfHumanity.sol\":\"IProofOfHumanity\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/E/Code/Repos/JuanuMusic/posta/posta-contracts/contracts/IProofOfHumanity.sol\":{\"keccak256\":\"0x02d7100fe1bac860344f7490d2420ab080edd684b0b8909056a893baed3200cb\",\"urls\":[\"bzz-raw://58b45ec58fbdcba09ecffbd57071ce363bb8751993474c0b4149af0a51d49218\",\"dweb:/ipfs/QmappTiC5hgciLeTygjfgZHiHnnFsSGTvnLMvZBKSZNvvQ\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xf8e8d118a7a8b2e134181f7da655f6266aa3a0f9134b2605747139fcb0c5d835\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9ec48567e7ad06acb670980d5cdf3fd7f3949bf12894f02d68c3bb43e75aa84f\",\"dweb:/ipfs/QmaG3R2J9cz92YT77vFjYrjMNU2wHp4ypwYD62HqDUqS5U\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "/**\r\n *  @authors: [@unknownunknown1*, @clesaege]\r\n *  @reviewers: []\r\n *  @auditors: []\r\n *  @bounties: []\r\n *  @deployments: []\r\n *  @tools: []\r\n */\r\n\r\npragma solidity 0.8.0;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\n\r\ninterface IProofOfHumanity is IERC20 {\r\n\r\n    struct SubmissionInfo {\r\n        uint8 status  ;\r\n        uint64 submissionTime   ;\r\n        uint64 index   ;\r\n        bool registered ;\r\n        bool hasVouched;\r\n        uint256 numberOfRequests;\r\n    }\r\n\r\n    /** @dev Return true if the submission is registered and not expired.\r\n     *  @param _submissionID The address of the submission.\r\n     *  @return Whether the submission is registered or not.\r\n     */\r\n    function isRegistered(address _submissionID) external view returns (bool);\r\n\r\n    /** @dev Return the number of submissions irrespective of their status.\r\n     *  @return The number of submissions.\r\n     */\r\n    function submissionCounter() external view returns (uint);\r\n\r\n    function getSubmissionInfo(address _submissionID) external view returns (SubmissionInfo memory);\r\n\r\n}\r\n\r\n// /**\r\n//  *  @title ProofOfHumanityProxy\r\n//  *  A proxy contract for ProofOfHumanity that implements a token interface to interact with other dapps.\r\n//  *  Note that it isn't an ERC20 and only implements its interface in order to be compatible with Snapshot.\r\n//  */\r\n// interface IProofOfHumanityProxy is IERC20{\r\n\r\n//     /** @dev Constructor.\r\n//      *  @param _PoH The address of the related ProofOfHumanity contract.\r\n//      */\r\n//     //constructor(IProofOfHumanity _PoH) virtual;\r\n\r\n//     /** @dev Changes the address of the the related ProofOfHumanity contract.\r\n//      *  @param _PoH The address of the new contract.\r\n//      */\r\n//     function changePoH(IProofOfHumanity _PoH) external virtual;\r\n\r\n//     /** @dev Changes the address of the the governor.\r\n//      *  @param _governor The address of the new governor.\r\n//      */\r\n//     function changeGovernor(address _governor) external virtual;\r\n\r\n\r\n//     /** @dev Returns true if the submission is registered and not expired.\r\n//      *  @param _submissionID The address of the submission.\r\n//      *  @return Whether the submission is registered or not.\r\n//      */\r\n//     function isRegistered(address _submissionID) external view virtual returns (bool);\r\n\r\n//     function burn(address from, uint256 amount) external virtual;\r\n\r\n//     // ******************** //\r\n//     // *      IERC20      * //\r\n//     // ******************** //\r\n\r\n//     // // /** @dev Returns the balance of a particular submission of the ProofOfHumanity contract.\r\n//     // //  *  Note that this function takes the expiration date into account.\r\n//     // //  *  @param _submissionID The address of the submission.\r\n//     // //  *  @return The balance of the submission.\r\n//     // //  */\r\n\r\n//     // function balanceOf(address _submissionID) external view returns (uint256);\r\n\r\n//     // // /** @dev Returns the count of all submissions that made a registration request at some point, including those that were added manually.\r\n//     // //  *  Note that with the current implementation of ProofOfHumanity it'd be very costly to count only the submissions that are currently registered.\r\n//     // //  *  @return The total count of submissions.\r\n//     // //  */\r\n//     // function totalSupply() external view returns (uint256);\r\n\r\n//     // function transfer(address _recipient, uint256 _amount) external returns (bool);\r\n\r\n//     // function allowance(address _owner, address _spender) external view returns (uint256);\r\n\r\n//     // function approve(address _spender, uint256 _amount) external returns (bool);\r\n\r\n//     // function transferFrom(address _sender, address _recipient, uint256 _amount) external returns (bool);\r\n// }",
  "sourcePath": "E:/Code/Repos/JuanuMusic/posta/posta-contracts/contracts/IProofOfHumanity.sol",
  "ast": {
    "absolutePath": "/E/Code/Repos/JuanuMusic/posta/posta-contracts/contracts/IProofOfHumanity.sol",
    "exportedSymbols": {
      "IERC20": [
        655
      ],
      "IProofOfHumanity": [
        40
      ]
    },
    "id": 41,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "154:22:0"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 41,
        "sourceUnit": 656,
        "src": "180:56:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 3,
              "name": "IERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 655,
              "src": "270:6:0"
            },
            "id": 4,
            "nodeType": "InheritanceSpecifier",
            "src": "270:6:0"
          }
        ],
        "contractDependencies": [
          655
        ],
        "contractKind": "interface",
        "fullyImplemented": false,
        "id": 40,
        "linearizedBaseContracts": [
          40,
          655
        ],
        "name": "IProofOfHumanity",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "IProofOfHumanity.SubmissionInfo",
            "id": 17,
            "members": [
              {
                "constant": false,
                "id": 6,
                "mutability": "mutable",
                "name": "status",
                "nodeType": "VariableDeclaration",
                "scope": 17,
                "src": "319:12:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint8",
                  "typeString": "uint8"
                },
                "typeName": {
                  "id": 5,
                  "name": "uint8",
                  "nodeType": "ElementaryTypeName",
                  "src": "319:5:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 8,
                "mutability": "mutable",
                "name": "submissionTime",
                "nodeType": "VariableDeclaration",
                "scope": 17,
                "src": "344:21:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint64",
                  "typeString": "uint64"
                },
                "typeName": {
                  "id": 7,
                  "name": "uint64",
                  "nodeType": "ElementaryTypeName",
                  "src": "344:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 10,
                "mutability": "mutable",
                "name": "index",
                "nodeType": "VariableDeclaration",
                "scope": 17,
                "src": "379:12:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint64",
                  "typeString": "uint64"
                },
                "typeName": {
                  "id": 9,
                  "name": "uint64",
                  "nodeType": "ElementaryTypeName",
                  "src": "379:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 12,
                "mutability": "mutable",
                "name": "registered",
                "nodeType": "VariableDeclaration",
                "scope": 17,
                "src": "405:15:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 11,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "405:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 14,
                "mutability": "mutable",
                "name": "hasVouched",
                "nodeType": "VariableDeclaration",
                "scope": 17,
                "src": "432:15:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 13,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "432:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 16,
                "mutability": "mutable",
                "name": "numberOfRequests",
                "nodeType": "VariableDeclaration",
                "scope": 17,
                "src": "458:24:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 15,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "458:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "SubmissionInfo",
            "nodeType": "StructDefinition",
            "scope": 40,
            "src": "286:204:0",
            "visibility": "public"
          },
          {
            "documentation": {
              "id": 18,
              "nodeType": "StructuredDocumentation",
              "src": "498:201:0",
              "text": "@dev Return true if the submission is registered and not expired.\n  @param _submissionID The address of the submission.\n  @return Whether the submission is registered or not."
            },
            "functionSelector": "c3c5a547",
            "id": 25,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "isRegistered",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 21,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20,
                  "mutability": "mutable",
                  "name": "_submissionID",
                  "nodeType": "VariableDeclaration",
                  "scope": 25,
                  "src": "727:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 19,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "727:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "726:23:0"
            },
            "returnParameters": {
              "id": 24,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 25,
                  "src": "773:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 22,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "773:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "772:6:0"
            },
            "scope": 40,
            "src": "705:74:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 26,
              "nodeType": "StructuredDocumentation",
              "src": "787:124:0",
              "text": "@dev Return the number of submissions irrespective of their status.\n  @return The number of submissions."
            },
            "functionSelector": "76c23ff1",
            "id": 31,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "submissionCounter",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 27,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "943:2:0"
            },
            "returnParameters": {
              "id": 30,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 29,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 31,
                  "src": "969:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 28,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "969:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "968:6:0"
            },
            "scope": 40,
            "src": "917:58:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "97973043",
            "id": 39,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getSubmissionInfo",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 34,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33,
                  "mutability": "mutable",
                  "name": "_submissionID",
                  "nodeType": "VariableDeclaration",
                  "scope": 39,
                  "src": "1010:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 32,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1010:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1009:23:0"
            },
            "returnParameters": {
              "id": 38,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 39,
                  "src": "1056:21:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_SubmissionInfo_$17_memory_ptr",
                    "typeString": "struct IProofOfHumanity.SubmissionInfo"
                  },
                  "typeName": {
                    "id": 36,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 35,
                      "name": "SubmissionInfo",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 17,
                      "src": "1056:14:0"
                    },
                    "referencedDeclaration": 17,
                    "src": "1056:14:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SubmissionInfo_$17_storage_ptr",
                      "typeString": "struct IProofOfHumanity.SubmissionInfo"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1055:23:0"
            },
            "scope": 40,
            "src": "983:96:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 41,
        "src": "240:844:0"
      }
    ],
    "src": "154:3621:0"
  },
  "legacyAST": {
    "absolutePath": "/E/Code/Repos/JuanuMusic/posta/posta-contracts/contracts/IProofOfHumanity.sol",
    "exportedSymbols": {
      "IERC20": [
        655
      ],
      "IProofOfHumanity": [
        40
      ]
    },
    "id": 41,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "154:22:0"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 41,
        "sourceUnit": 656,
        "src": "180:56:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 3,
              "name": "IERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 655,
              "src": "270:6:0"
            },
            "id": 4,
            "nodeType": "InheritanceSpecifier",
            "src": "270:6:0"
          }
        ],
        "contractDependencies": [
          655
        ],
        "contractKind": "interface",
        "fullyImplemented": false,
        "id": 40,
        "linearizedBaseContracts": [
          40,
          655
        ],
        "name": "IProofOfHumanity",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "IProofOfHumanity.SubmissionInfo",
            "id": 17,
            "members": [
              {
                "constant": false,
                "id": 6,
                "mutability": "mutable",
                "name": "status",
                "nodeType": "VariableDeclaration",
                "scope": 17,
                "src": "319:12:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint8",
                  "typeString": "uint8"
                },
                "typeName": {
                  "id": 5,
                  "name": "uint8",
                  "nodeType": "ElementaryTypeName",
                  "src": "319:5:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 8,
                "mutability": "mutable",
                "name": "submissionTime",
                "nodeType": "VariableDeclaration",
                "scope": 17,
                "src": "344:21:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint64",
                  "typeString": "uint64"
                },
                "typeName": {
                  "id": 7,
                  "name": "uint64",
                  "nodeType": "ElementaryTypeName",
                  "src": "344:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 10,
                "mutability": "mutable",
                "name": "index",
                "nodeType": "VariableDeclaration",
                "scope": 17,
                "src": "379:12:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint64",
                  "typeString": "uint64"
                },
                "typeName": {
                  "id": 9,
                  "name": "uint64",
                  "nodeType": "ElementaryTypeName",
                  "src": "379:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 12,
                "mutability": "mutable",
                "name": "registered",
                "nodeType": "VariableDeclaration",
                "scope": 17,
                "src": "405:15:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 11,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "405:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 14,
                "mutability": "mutable",
                "name": "hasVouched",
                "nodeType": "VariableDeclaration",
                "scope": 17,
                "src": "432:15:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 13,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "432:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 16,
                "mutability": "mutable",
                "name": "numberOfRequests",
                "nodeType": "VariableDeclaration",
                "scope": 17,
                "src": "458:24:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 15,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "458:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "SubmissionInfo",
            "nodeType": "StructDefinition",
            "scope": 40,
            "src": "286:204:0",
            "visibility": "public"
          },
          {
            "documentation": {
              "id": 18,
              "nodeType": "StructuredDocumentation",
              "src": "498:201:0",
              "text": "@dev Return true if the submission is registered and not expired.\n  @param _submissionID The address of the submission.\n  @return Whether the submission is registered or not."
            },
            "functionSelector": "c3c5a547",
            "id": 25,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "isRegistered",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 21,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20,
                  "mutability": "mutable",
                  "name": "_submissionID",
                  "nodeType": "VariableDeclaration",
                  "scope": 25,
                  "src": "727:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 19,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "727:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "726:23:0"
            },
            "returnParameters": {
              "id": 24,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 25,
                  "src": "773:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 22,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "773:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "772:6:0"
            },
            "scope": 40,
            "src": "705:74:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 26,
              "nodeType": "StructuredDocumentation",
              "src": "787:124:0",
              "text": "@dev Return the number of submissions irrespective of their status.\n  @return The number of submissions."
            },
            "functionSelector": "76c23ff1",
            "id": 31,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "submissionCounter",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 27,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "943:2:0"
            },
            "returnParameters": {
              "id": 30,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 29,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 31,
                  "src": "969:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 28,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "969:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "968:6:0"
            },
            "scope": 40,
            "src": "917:58:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "97973043",
            "id": 39,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getSubmissionInfo",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 34,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33,
                  "mutability": "mutable",
                  "name": "_submissionID",
                  "nodeType": "VariableDeclaration",
                  "scope": 39,
                  "src": "1010:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 32,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1010:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1009:23:0"
            },
            "returnParameters": {
              "id": 38,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 39,
                  "src": "1056:21:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_SubmissionInfo_$17_memory_ptr",
                    "typeString": "struct IProofOfHumanity.SubmissionInfo"
                  },
                  "typeName": {
                    "id": 36,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 35,
                      "name": "SubmissionInfo",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 17,
                      "src": "1056:14:0"
                    },
                    "referencedDeclaration": 17,
                    "src": "1056:14:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SubmissionInfo_$17_storage_ptr",
                      "typeString": "struct IProofOfHumanity.SubmissionInfo"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1055:23:0"
            },
            "scope": 40,
            "src": "983:96:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 41,
        "src": "240:844:0"
      }
    ],
    "src": "154:3621:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.0+commit.c7dfd78e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.4",
  "updatedAt": "2021-06-26T21:32:34.126Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
      },
      "approve(address,uint256)": {
        "details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
      },
      "balanceOf(address)": {
        "details": "Returns the amount of tokens owned by `account`."
      },
      "isRegistered(address)": {
        "details": "Return true if the submission is registered and not expired.",
        "params": {
          "_submissionID": "The address of the submission."
        },
        "returns": {
          "_0": "Whether the submission is registered or not."
        }
      },
      "submissionCounter()": {
        "details": "Return the number of submissions irrespective of their status.",
        "returns": {
          "_0": "The number of submissions."
        }
      },
      "totalSupply()": {
        "details": "Returns the amount of tokens in existence."
      },
      "transfer(address,uint256)": {
        "details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
      },
      "transferFrom(address,address,uint256)": {
        "details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}